spring:
  application:
    name: gateway
  cloud:
#    consul:
#      host: consul           # Адрес Consul-агента (по умолчанию localhost)
#      port: 8500
    gateway:
      server:
        webmvc:
          routes:
            - id: account-service-route
              uri: ${ACCOUNT_SERVICE_URL:http://account:8080}
              predicates:
                - Path=/account/**
              filters:
                  - RewritePath=/account/?(?<segment>.*), /$\{segment}
            - id: front-service-route  # ID роута
              uri: ${FRONT_SERVICE_URL:http://front:8080}  # URI целевого микросервиса
              predicates:
                - Path=/**
              filters:
                - RewritePath=/(?<segment>.*), /$\{segment}

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_URL:http://localhost:8087/realms/bankapp}
        registration:
          gateway:
            provider: keycloak
            client-id: gateway          # замени на реальный client-id из кейклок
            client-secret: gIkp37AyRajcXcqRD7IhEINQXFgI0mZz
            authorization-grant-type: client_credentials
            token-uri: ${KEYCLOAK_URL/protocol/openid-connect/token:http://localhost:8087/realms/bankapp/protocol/openid-connect/token}
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_URL:http://localhost:8087/realms/bankapp}


logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.server: DEBUG
server:
  port: 8081

management:
  zipkin:
    tracing:
      endpoint: ${SPRING_ZIPKIN_BASE_URL:http://zipkin:9411}/api/v2/spans
  tracing:
    sampling:
      probability: 1
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always