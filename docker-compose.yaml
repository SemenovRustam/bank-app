services:
  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    volumes:
      - ./kafka-data:/var/lib/kafka/data
    environment:
      CLUSTER_ID: "cluster-id"
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:29093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://host.docker.internal:9092"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
    networks:
      - app-net

  front:
    container_name: front
    build: front
    ports:
      - '8085:8080'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/bank
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SPRING_ZIPKIN_BASE_URL: http://zipkin:9411/
    networks:
      - app-net
      - keycloak_default  # подключаемся к сети Keycloak

  account:
    container_name: account
    build: account
    ports:
      - '8090:8080'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/bank
    networks:
      - app-net
      - keycloak_default

  gateway:
    container_name: gateway
    build: gateway
    ports:
      - '8081:8080'
    depends_on:
      - front
      - account
    environment:
      KEYCLOAK_URL: http://keycloak:8080/realms/bankapp
    networks:
      - app-net
      - keycloak_default

  notifications:
    container_name: notifications
    build: notifications
    ports:
      - '8084:8080'
    networks:
      - app-net
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  exchange-generator:
    container_name:  exchange-generator
    build:  exchange-generator
    ports:
      - '8088:8080'
    networks:
      - app-net
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  exchange:
    container_name: exchange
    build: exchange
    ports:
      - '8089:8080'
    networks:
      - app-net
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SPRING_ZIPKIN_BASE_URL: http://zipkin:9411/
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  transfer:
    container_name: transfer
    build: transfer
    ports:
      - '8083:8080'
    networks:
      - app-net
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500

  cash:
    container_name: cash
    build: cash
    ports:
      - '8095:8080'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/bank
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - app-net
      - keycloak_default

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: bank
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net

  zipkin:
    image: openzipkin/zipkin:2.27
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - app-net

volumes:
  pgdata:

networks:
  app-net:
    driver: bridge
  keycloak_default:
    external: true