version: '3.9'

services:
  front:
    container_name: front
    build: front
    ports:
      - '8085:8080'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank-app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/bank-app
      ACCOUNT_SERVICE_URL: http://account:8080
    networks:
      - app-net
      - keycloak-net  # подключаемся к сети Keycloak

  account:
    container_name: account
    build: account
    ports:
      - '8090:8080'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank-app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/bank-app
    networks:
      - app-net
      - keycloak-net

  gateway:
    container_name: gateway
    build: gateway
    ports:
      - '8081:8080'
    depends_on:
      - front
      - account
    environment:
      ACCOUNT_SERVICE_URL: http://account:8080
      FRONT_SERVICE_URL: http://front:8080
      KEYCLOAK_URL: http://keycloak:8080/realms/bankapp  # ВАЖНО: имя сервиса в сети keycloak-net
    networks:
      - app-net
      - keycloak-net

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: bank-app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net

volumes:
  pgdata:

networks:
  app-net:
  keycloak-net:  # обязательно объяви сеть, чтобы использовать с Keycloak
    external: true