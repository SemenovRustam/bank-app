services:
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - '8500:8500'  # UI и API
    networks:
      - app-net
      - keycloak_default
    logging:
      driver: "none"

  front:
    container_name: front
    build: front
    ports:
      - '8085:8080'
    depends_on:
      postgres:
        condition: service_healthy
      consul:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank-app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/bank-app
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    networks:
      - app-net
      - keycloak_default  # подключаемся к сети Keycloak

  account:
    container_name: account
    build: account
    ports:
      - '8090:8080'
    depends_on:
      postgres:
        condition: service_healthy
      consul:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank-app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/bank-app
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    networks:
      - app-net
      - keycloak_default

  gateway:
    container_name: gateway
    build: gateway
    ports:
      - '8081:8080'
    depends_on:
      - front
      - account
      - consul
    environment:
      KEYCLOAK_URL: http://keycloak:8080/realms/bankapp
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    networks:
      - app-net
      - keycloak_default

  notifications:
    container_name: notifications
    build: notifications
    ports:
      - '8084:8080'
    networks:
      - app-net
    depends_on:
      consul:
        condition: service_started
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500

  transfer:
    container_name: transfer
    build: transfer
    ports:
      - '8083:8080'
    networks:
      - app-net
    depends_on:
      consul:
        condition: service_started
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500

  cash:
    container_name: cash
    build: cash
    ports:
      - '8095:8080'
    depends_on:
      postgres:
        condition: service_healthy
      consul:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank-app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/bank-app
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    networks:
      - app-net
      - keycloak_default

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: bank-app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net

volumes:
  pgdata:

networks:
  app-net:
    driver: bridge
  keycloak_default:
    external: true